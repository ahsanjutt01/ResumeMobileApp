{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-reorder_2-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,mBAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,+CAAA,GAAA,mBAAA;AAAA;AAAA,2DAAA,CAAA;AAAA;;;AAAA,QAAA,sDAAA,GAAA,mBAAA;AAAA;AAAA,kEAAA,CAAA;AAAA;;;AAAA,QAAA,gDAAA,GAAA,mBAAA;AAAA;AAAA,4DAAA,CAAA;;AAIA,QAAA,aAAA,GAAA,2IAAA;AAEA,QAAA,YAAA,GAAA,2IAAA;;AAEA,QAAA,OAAA;AACA,uBAAA,OAAA,EAAA;AAAA;;AACQ,QAAA,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACR;;AAHA;AAAA;AAAA,gCAIA,EAJA,EAIA;AACA,UAAA,EAAA,CAAA,cAAA;AACA,UAAA,EAAA,CAAA,wBAAA;AACA;AAPA;AAAA;AAAA,iCAQA;AACA,cAAA,IAAA,GAAqB,MAAA,CAAA,sDAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB;AACA,cAAA,WAAA,GAAA,IAAA,KAAA,KAAA,GAAA,uBAAA,GAAA,mBAAA;AACA,iBAAgB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,+CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,qBAAA;AAAH,WAAN,EAAyB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC,IAAD,EAAgB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,UAAD,EAAC;AAAc,YAAA,IAAA,EAAA,WAAd;AAAc,YAAA,IAAA,EAAA,KAAd;AAAc,qBAAA,cAAd;AAAc,YAAA,IAAA,EAAA;AAAd,WAAD,CAAhB,CAAzB,CAAhB;AACA;AAZA;;AAAA;AAAA,OAAA;;AAcA,IAAA,OAAA,CAAA,KAAA,GAAA;AACA;AAAA,MAAA,GAAA,EAAA,aADA;;AAEA;AAAA,MAAA,EAAA,EAAA;AAFA,KAAA;AAKA,QAAA,eAAA,GAAA,q1BAAA;;AAEA,QAAA,YAAA;AACA,4BAAA,OAAA,EAAA;AAAA;;AACQ,QAAA,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;AACR,aAAA,WAAA,GAAA,CAAA,CAAA;AACA,aAAA,aAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,CAAA;AACA,aAAA,cAAA,GAAA,CAAA;AACA,aAAA,eAAA,GAAA,CAAA;AACA,aAAA,YAAA,GAAA,CAAA;AACA,aAAA,eAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA;AAAA;AAAA;AACA;;;;AAGA,aAAA,QAAA,GAAA,IAAA;AACA,aAAA,cAAA,GAA8B,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,gBAAX,EAAW,CAAX,CAA9B;AACA;;AAhBA;AAAA;AAAA,0CAiBA;AACA,cAAA,KAAA,OAAA,EAAA;AACA,iBAAA,OAAA,CAAA,MAAA,CAAA,CAAA,KAAA,QAAA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,oBAAA,SAvBA,GAuBA,KAAA,EAAA,CAAA,OAAA,CAAA,aAAA,CAvBA;;AAAA,yBAwBA,SAxBA;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAyBA,SAAA,CAAA,gBAAA,EAzBA;;AAAA;AAyBA,yBAAA,QAzBA;;AAAA;AAAA;AAAA,2BA2B8B,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;AAAA;AAAA,2EAAA,CAAA,CA3B9B;;AAAA;AA2BA,yBAAA,OA3BA,iBA2B2D,aA3B3D,CA2B2D;AAC3D,sBAAA,EAAA,EAAA,KAAA,EAD2D;AAE3D,sBAAA,WAAA,EAAA,SAF2D;AAG3D,sBAAA,eAAA,EAAA,GAH2D;AAI3D,sBAAA,SAAA,EAAA,CAJ2D;AAK3D,sBAAA,SAAA,EAAA,GAL2D;AAM3D,sBAAA,OAAA,EAAA,KAN2D;AAO3D,sBAAA,QAAA,EAAA,kBAAA,MAAA;AAAA,+BAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA;AAAA,uBAP2D;AAQ3D,sBAAA,OAAA,EAAA,iBAAA,EAAA;AAAA,+BAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA;AAAA,uBAR2D;AAS3D,sBAAA,MAAA,EAAA,gBAAA,EAAA;AAAA,+BAAA,KAAA,CAAA,MAAA,CAAA,EAAA,CAAA;AAAA,uBAT2D;AAU3D,sBAAA,KAAA,EAAA;AAAA,+BAAA,KAAA,CAAA,KAAA,EAAA;AAAA;AAV2D,qBA3B3D;AAuCA,yBAAA,eAAA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+CAyCA;AACA,eAAA,KAAA;;AACA,cAAA,KAAA,OAAA,EAAA;AACA,iBAAA,OAAA,CAAA,OAAA;AACA,iBAAA,OAAA,GAAA,SAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAhDA;AAAA;AAAA,iCA6DA,aA7DA,EA6DA;AACA,iBAAA,OAAA,CAAA,OAAA,CAAA,KAAA,YAAA,CAAA,aAAA,CAAA,CAAA;AACA;AA/DA;AAAA;AAAA,iCAgEA,EAhEA,EAgEA;AACA,cAAA,KAAA,cAAA,IAAA,KAAA,KAAA,KAAA;AAAA;AAAA,YAAA;AACA,qBAAA,KAAA;AACA;;AACA,cAAA,MAAA,GAAA,EAAA,CAAA,KAAA,CAAA,MAAA;AACA,cAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA;;AACA,cAAA,CAAA,SAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,cAAA,IAAA,GAAA,eAAA,CAAA,SAAA,EAAA,KAAA,EAAA,CAAA;;AACA,cAAA,CAAA,IAAA,EAAA;AACA,mBAAA,KAAA;AACA;;AACA,UAAA,EAAA,CAAA,IAAA,GAAA,IAAA;AACA,iBAAA,IAAA;AACA;AA/EA;AAAA;AAAA,gCAgFA,EAhFA,EAgFA;AACA,UAAA,EAAA,CAAA,KAAA,CAAA,cAAA;AACA,cAAA,IAAA,GAAA,KAAA,cAAA,GAAA,EAAA,CAAA,IAAA;AACA,cAAA,OAAA,GAAA,KAAA,aAAA;AACA,UAAA,OAAA,CAAA,MAAA,GAAA,CAAA;AACA,cAAA,EAAA,GAAA,KAAA,EAAA;AACA,cAAA,QAAA,GAAA,EAAA,CAAA,QAAA;;AACA,cAAA,CAAA,QAAA,IAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA;;AACA,cAAA,GAAA,GAAA,CAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,QAAA,CAAA,MAAvB,EAA4C,CAAA,EAA5C,EAA4C;AAC5C,gBAAA,KAAA,GAAA,QAAA,CAAA,CAAA,CAAA;AACA,YAAA,GAAA,IAAA,KAAA,CAAA,YAAA;AACA,YAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,YAAA,KAAA,CAAA,SAAA,GAAA,CAAA;AACA;;AACA,cAAA,GAAA,GAAA,EAAA,CAAA,qBAAA,EAAA;AACA,eAAA,YAAA,GAAA,GAAA,CAAA,GAAA;AACA,eAAA,eAAA,GAAA,GAAA,CAAA,MAAA;;AACA,cAAA,KAAA,QAAA,EAAA;AACA,gBAAA,SAAA,GAAA,KAAA,QAAA,CAAA,qBAAA,EAAA;AACA,iBAAA,eAAA,GAAA,KAAA,QAAA,CAAA,SAAA;AACA,iBAAA,WAAA,GAAA,SAAA,CAAA,GAAA,GAAA,kBAAA;AACA,iBAAA,cAAA,GAAA,SAAA,CAAA,MAAA,GAAA,kBAAA;AACA,WALA,MAMA;AACA,iBAAA,eAAA,GAAA,CAAA;AACA,iBAAA,WAAA,GAAA,CAAA;AACA,iBAAA,cAAA,GAAA,CAAA;AACA;;AACA,eAAA,WAAA,GAAA,YAAA,CAAA,IAAA,CAAA;AACA,eAAA,kBAAA,GAAA,IAAA,CAAA,YAAA;AACA,eAAA,KAAA,GAAA;AAAA;AAAA;AACA,UAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,qBAAA;AACQ,UAAA,MAAA,CAAA,gDAAA,CAAA,GAAA,CAAA,CAAA;AACR;AApHA;AAAA;AAAA,+BAqHA,EArHA,EAqHA;AACA,cAAA,YAAA,GAAA,KAAA,cAAA;;AACA,cAAA,CAAA,YAAA,EAAA;AACA;AACA,WAJA,CAKA;;;AACA,cAAA,MAAA,GAAA,KAAA,UAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CANA,CAOA;;AACA,cAAA,GAAA,GAAA,KAAA,YAAA,GAAA,MAAA;AACA,cAAA,MAAA,GAAA,KAAA,eAAA,GAAA,MAAA;AACA,cAAA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,CAAA;AACA,cAAA,MAAA,GAAA,MAAA,GAAA,QAAA,GAAA,EAAA,CAAA,MAAA;AACA,cAAA,WAAA,GAAA,QAAA,GAAA,GAAA;AACA,cAAA,OAAA,GAAA,KAAA,eAAA,CAAA,WAAA,CAAA;;AACA,cAAA,OAAA,KAAA,KAAA,WAAA,EAAA;AACA,gBAAA,SAAA,GAAA,YAAA,CAAA,YAAA,CAAA;AACA,iBAAA,WAAA,GAAA,OAAA;AACY,YAAA,MAAA,CAAA,gDAAA,CAAA,GAAA,CAAA,CAAA;AACZ,iBAAA,WAAA,CAAA,SAAA,EAAA,OAAA;AACA,WAnBA,CAoBA;;;AACA,UAAA,YAAA,CAAA,KAAA,CAAA,SAAA,wBAAqD,MAArD;AACA;AA3IA;AAAA;AAAA,gCA4IA;AACA,cAAA,cAAA,GAAA,KAAA,cAAA;AACA,eAAA,KAAA,GAAA;AAAA;AAAA;;AACA,cAAA,CAAA,cAAA,EAAA;AACA,iBAAA,KAAA,GAAA;AAAA;AAAA;AACA;AACA;;AACA,cAAA,OAAA,GAAA,KAAA,WAAA;AACA,cAAA,SAAA,GAAA,YAAA,CAAA,cAAA,CAAA;;AACA,cAAA,OAAA,KAAA,SAAA,EAAA;AACA,iBAAA,YAAA;AACA,WAFA,MAGA;AACA,iBAAA,cAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA,SADA;AAEA,cAAA,EAAA,EAAA,OAFA;AAGA,cAAA,QAAA,EAAA,KAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AAHA,aAAA;AAKA;;AACQ,UAAA,MAAA,CAAA,gDAAA,CAAA,GAAA,CAAA,CAAA;AACR;AAhKA;AAAA;AAAA,qCAiKA,aAjKA,EAiKA;AACA,cAAA,cAAA,GAAA,KAAA,cAAA;;AACA,cAAA,cAAA,IAAA,KAAA,KAAA,KAAA;AAAA;AAAA,YAAA;AACA,kBAAA,QAAA,GAAA,KAAA,EAAA,CAAA,QAAA;AACA,kBAAA,GAAA,GAAA,QAAA,CAAA,MAAA;AACA,kBAAA,OAAA,GAAA,KAAA,WAAA;AACA,kBAAA,SAAA,GAAA,YAAA,CAAA,cAAA,CAAA;;AACA,kBAAA,OAAA,KAAA,SAAA,KAAA,CAAA,aAAA,IAAA,aAAA,KAAA,IAAA,CAAA,EAAA;AACA,oBAAA,GAAA,GAAA,SAAA,GAAA,OAAA,GACA,QAAA,CAAA,OAAA,GAAA,CAAA,CADA,GAEA,QAAA,CAAA,OAAA,CAFA;AAGA,qBAAA,EAAA,CAAA,YAAA,CAAA,cAAA,EAAA,GAAA;AACA;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,aAAA,CAAA,EAAA;AACA,gBAAA,aAAA,GAAA,YAAA,CAAA,aAAA,EAAA,SAAA,EAAA,OAAA,CAAA;AACA;;AACA,mBAAA,IAAA,CAAA,GAAA,CAAA,EAA2B,CAAA,GAAA,GAA3B,EAAoC,CAAA,EAApC,EAAoC;AACpC,gBAAA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,WAAA,IAAA,EAAA;AACA;;AACA,cAAA,cAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,cAAA,CAAA,SAAA,CAAA,MAAA,CAAA,qBAAA;AACA,mBAAA,cAAA,GAAA,SAAA;AACA,mBAAA,KAAA,GAAA;AAAA;AAAA;AACA;;AACA,iBAAA,aAAA;AACA;AA1LA;AAAA;AAAA,wCA2LA,MA3LA,EA2LA;AACA,cAAA,OAAA,GAAA,KAAA,aAAA;AACA,cAAA,CAAA,GAAA,CAAA,CAFA,CAGA;AACA;AACA;;AACA,eAAA,CAAA,GAAA,CAAA,EAAmB,CAAA,GAAA,OAAA,CAAA,MAAnB,EAAuC,CAAA,EAAvC,EAAuC;AACvC,gBAAA,OAAA,CAAA,CAAA,CAAA,GAAA,MAAA,EAAA;AACA;AACA;AACA;;AACA,iBAAA,CAAA;AACA;AACA;;AAxMA;AAAA;AAAA,oCAyMA,SAzMA,EAyMA,OAzMA,EAyMA;AACA,cAAA,UAAA,GAAA,KAAA,kBAAA;AACA,cAAA,QAAA,GAAA,KAAA,EAAA,CAAA,QAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,QAAA,CAAA,MAAvB,EAA4C,CAAA,EAA5C,EAA4C;AAC5C,gBAAA,KAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA;AACA,gBAAA,KAAA,GAAA,EAAA;;AACA,gBAAA,CAAA,GAAA,SAAA,IAAA,CAAA,IAAA,OAAA,EAAA;AACA,cAAA,KAAA,wBAAsC,CAAA,UAAtC,QAAA;AACA,aAFA,MAGA,IAAA,CAAA,GAAA,SAAA,IAAA,CAAA,IAAA,OAAA,EAAA;AACA,cAAA,KAAA,wBAAsC,UAAtC,QAAA;AACA;;AACA,YAAA,KAAA,CAAA,WAAA,CAAA,GAAA,KAAA;AACA;AACA;AAvNA;AAAA;AAAA,mCAwNA,IAxNA,EAwNA;AACA,cAAA,CAAA,KAAA,QAAA,EAAA;AACA,mBAAA,CAAA;AACA;;AACA,cAAA,MAAA,GAAA,CAAA;;AACA,cAAA,IAAA,GAAA,KAAA,WAAA,EAAA;AACA,YAAA,MAAA,GAAA,CAAA,WAAA;AACA,WAFA,MAGA,IAAA,IAAA,GAAA,KAAA,cAAA,EAAA;AACA,YAAA,MAAA,GAAA,WAAA;AACA;;AACA,cAAA,MAAA,KAAA,CAAA,EAAA;AACA,iBAAA,QAAA,CAAA,QAAA,CAAA,CAAA,EAAA,MAAA;AACA;;AACA,iBAAA,KAAA,QAAA,CAAA,SAAA,GAAA,KAAA,eAAA;AACA;AAvOA;AAAA;AAAA,iCAwOA;AAAA;;AACA,cAAA,IAAA,GAAqB,MAAA,CAAA,sDAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB;AACA,iBAAgB,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,+CAAA,CAAA,GAAA,CAAF,EAAM;AAAG,2DACzB,IADyB,EACzB,IADyB,2BAEzB,iBAFyB,EAEzB,CAAA,KAAA,QAFyB,2BAGzB,qBAHyB,EAGzB,KAAA,KAAA,KAAA,CAHyB;AAAH,WAAN,CAAhB;AAKA;AA/OA;AAAA;AAAA,4BAgPA;AAAc,iBAAQ,MAAA,CAAA,+CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;AAAyB;AAhPvC;AAAA;AAAA,4BAiPA;AAA2B,iBAAA;AAC3B,wBAAA,CAAA,iBAAA;AAD2B,WAAA;AAErB;AAnPN;;AAAA;AAAA,OAAA;;AAqPA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,OAAA,EAAA;AACA,aAAA,OAAA,CAAA,WAAA,CAAA;AACA,KAFA;;AAGA,QAAA,eAAA,GAAA,SAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA;AACA,UAAA,MAAA;;AACA,aAAA,IAAA,EAAA;AACA,QAAA,MAAA,GAAA,IAAA,CAAA,aAAA;;AACA,YAAA,MAAA,KAAA,SAAA,EAAA;AACA,iBAAA,IAAA;AACA;;AACA,QAAA,IAAA,GAAA,MAAA;AACA;;AACA,aAAA,SAAA;AACA,KAVA;;AAWA,QAAA,kBAAA,GAAA,EAAA;AACA,QAAA,WAAA,GAAA,EAAA;AACA,QAAA,qBAAA,GAAA,kBAAA;;AACA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,OAAA;AACA,aAAA,KAAA,CAAA,KAAA,EAAA;AACA,KALA;;AAMA,IAAA,YAAA,CAAA,KAAA,GAAA,eAAA","sourcesContent":["import { r as registerInstance, h, H as Host, d as createEvent, e as getElement } from './index-26ec602c.js';\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, c as hapticSelectionEnd } from './haptic-ccbda579.js';\n\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px}.reorder-icon{font-size:34px;opacity:0.4}\";\n\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px}.reorder-icon{font-size:31px;opacity:0.3}\";\n\nconst Reorder = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    onClick(ev) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n    }\n    render() {\n        const mode = getIonMode(this);\n        const reorderIcon = mode === 'ios' ? 'reorder-three-outline' : 'reorder-two-sharp';\n        return (h(Host, { class: mode }, h(\"slot\", null, h(\"ion-icon\", { name: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\" }))));\n    }\n};\nReorder.style = {\n    /*STENCIL:MODE:ios*/ ios: reorderIosCss,\n    /*STENCIL:MODE:md*/ md: reorderMdCss\n};\n\nconst reorderGroupCss = \".reorder-list-active>*{-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\n\nconst ReorderGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastToIndex = -1;\n        this.cachedHeights = [];\n        this.scrollElTop = 0;\n        this.scrollElBottom = 0;\n        this.scrollElInitial = 0;\n        this.containerTop = 0;\n        this.containerBottom = 0;\n        this.state = 0 /* Idle */;\n        /**\n         * If `true`, the reorder will be hidden.\n         */\n        this.disabled = true;\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const contentEl = this.el.closest('ion-content');\n        if (contentEl) {\n            this.scrollEl = await contentEl.getScrollElement();\n        }\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\n            el: this.el,\n            gestureName: 'reorder',\n            gesturePriority: 110,\n            threshold: 0,\n            direction: 'y',\n            passive: false,\n            canStart: detail => this.canStart(detail),\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        this.onEnd();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n     *\n     * If a list of items is passed, the list will be reordered and returned in the\n     * proper order.\n     *\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\n     * and the item will remain in the position it was dragged to. If `false` is passed,\n     * the reorder will complete and the item will bounce back to its original position.\n     *\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\n     * boolean of whether or not the reorder should reposition the item.\n     */\n    complete(listOrReorder) {\n        return Promise.resolve(this.completeSync(listOrReorder));\n    }\n    canStart(ev) {\n        if (this.selectedItemEl || this.state !== 0 /* Idle */) {\n            return false;\n        }\n        const target = ev.event.target;\n        const reorderEl = target.closest('ion-reorder');\n        if (!reorderEl) {\n            return false;\n        }\n        const item = findReorderItem(reorderEl, this.el);\n        if (!item) {\n            return false;\n        }\n        ev.data = item;\n        return true;\n    }\n    onStart(ev) {\n        ev.event.preventDefault();\n        const item = this.selectedItemEl = ev.data;\n        const heights = this.cachedHeights;\n        heights.length = 0;\n        const el = this.el;\n        const children = el.children;\n        if (!children || children.length === 0) {\n            return;\n        }\n        let sum = 0;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            sum += child.offsetHeight;\n            heights.push(sum);\n            child.$ionIndex = i;\n        }\n        const box = el.getBoundingClientRect();\n        this.containerTop = box.top;\n        this.containerBottom = box.bottom;\n        if (this.scrollEl) {\n            const scrollBox = this.scrollEl.getBoundingClientRect();\n            this.scrollElInitial = this.scrollEl.scrollTop;\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n        }\n        else {\n            this.scrollElInitial = 0;\n            this.scrollElTop = 0;\n            this.scrollElBottom = 0;\n        }\n        this.lastToIndex = indexForItem(item);\n        this.selectedItemHeight = item.offsetHeight;\n        this.state = 1 /* Active */;\n        item.classList.add(ITEM_REORDER_SELECTED);\n        hapticSelectionStart();\n    }\n    onMove(ev) {\n        const selectedItem = this.selectedItemEl;\n        if (!selectedItem) {\n            return;\n        }\n        // Scroll if we reach the scroll margins\n        const scroll = this.autoscroll(ev.currentY);\n        // // Get coordinate\n        const top = this.containerTop - scroll;\n        const bottom = this.containerBottom - scroll;\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n        const deltaY = scroll + currentY - ev.startY;\n        const normalizedY = currentY - top;\n        const toIndex = this.itemIndexForTop(normalizedY);\n        if (toIndex !== this.lastToIndex) {\n            const fromIndex = indexForItem(selectedItem);\n            this.lastToIndex = toIndex;\n            hapticSelectionChanged();\n            this.reorderMove(fromIndex, toIndex);\n        }\n        // Update selected item position\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\n    }\n    onEnd() {\n        const selectedItemEl = this.selectedItemEl;\n        this.state = 2 /* Complete */;\n        if (!selectedItemEl) {\n            this.state = 0 /* Idle */;\n            return;\n        }\n        const toIndex = this.lastToIndex;\n        const fromIndex = indexForItem(selectedItemEl);\n        if (toIndex === fromIndex) {\n            this.completeSync();\n        }\n        else {\n            this.ionItemReorder.emit({\n                from: fromIndex,\n                to: toIndex,\n                complete: this.completeSync.bind(this)\n            });\n        }\n        hapticSelectionEnd();\n    }\n    completeSync(listOrReorder) {\n        const selectedItemEl = this.selectedItemEl;\n        if (selectedItemEl && this.state === 2 /* Complete */) {\n            const children = this.el.children;\n            const len = children.length;\n            const toIndex = this.lastToIndex;\n            const fromIndex = indexForItem(selectedItemEl);\n            if (toIndex !== fromIndex && (!listOrReorder || listOrReorder === true)) {\n                const ref = (fromIndex < toIndex)\n                    ? children[toIndex + 1]\n                    : children[toIndex];\n                this.el.insertBefore(selectedItemEl, ref);\n            }\n            if (Array.isArray(listOrReorder)) {\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n            }\n            for (let i = 0; i < len; i++) {\n                children[i].style['transform'] = '';\n            }\n            selectedItemEl.style.transition = '';\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n            this.selectedItemEl = undefined;\n            this.state = 0 /* Idle */;\n        }\n        return listOrReorder;\n    }\n    itemIndexForTop(deltaY) {\n        const heights = this.cachedHeights;\n        let i = 0;\n        // TODO: since heights is a sorted array of integers, we can do\n        // speed up the search using binary search. Remember that linear-search is still\n        // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n        for (i = 0; i < heights.length; i++) {\n            if (heights[i] > deltaY) {\n                break;\n            }\n        }\n        return i;\n    }\n    /********* DOM WRITE ********* */\n    reorderMove(fromIndex, toIndex) {\n        const itemHeight = this.selectedItemHeight;\n        const children = this.el.children;\n        for (let i = 0; i < children.length; i++) {\n            const style = children[i].style;\n            let value = '';\n            if (i > fromIndex && i <= toIndex) {\n                value = `translateY(${-itemHeight}px)`;\n            }\n            else if (i < fromIndex && i >= toIndex) {\n                value = `translateY(${itemHeight}px)`;\n            }\n            style['transform'] = value;\n        }\n    }\n    autoscroll(posY) {\n        if (!this.scrollEl) {\n            return 0;\n        }\n        let amount = 0;\n        if (posY < this.scrollElTop) {\n            amount = -SCROLL_JUMP;\n        }\n        else if (posY > this.scrollElBottom) {\n            amount = SCROLL_JUMP;\n        }\n        if (amount !== 0) {\n            this.scrollEl.scrollBy(0, amount);\n        }\n        return this.scrollEl.scrollTop - this.scrollElInitial;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                'reorder-enabled': !this.disabled,\n                'reorder-list-active': this.state !== 0 /* Idle */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nconst indexForItem = (element) => {\n    return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n    let parent;\n    while (node) {\n        parent = node.parentElement;\n        if (parent === container) {\n            return node;\n        }\n        node = parent;\n    }\n    return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n    const element = array[from];\n    array.splice(from, 1);\n    array.splice(to, 0, element);\n    return array.slice();\n};\nReorderGroup.style = reorderGroupCss;\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"],"sourceRoot":"webpack:///","file":"51-es5.js"}