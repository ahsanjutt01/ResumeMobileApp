{"version":3,"sources":["node_modules/@ionic/core/dist/esm/input-shims-29e09454.js"],"names":[],"mappings":"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","sourcesContent":["import { p as pointerCoord } from './helpers-d8b49b57.js';\n\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0) => {\n    if (cloneMap.has(componentEl) === shouldRelocate) {\n        return;\n    }\n    if (shouldRelocate) {\n        addClone(componentEl, inputEl, inputRelativeY);\n    }\n    else {\n        removeClone(componentEl, inputEl);\n    }\n};\nconst isFocused = (input) => {\n    return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY) => {\n    // this allows for the actual input to receive the focus from\n    // the user's touch event, but before it receives focus, it\n    // moves the actual input to a location that will not screw\n    // up the app's layout, and does not allow the native browser\n    // to attempt to scroll the input into place (messing up headers/footers)\n    // the cloned input fills the area of where native input should be\n    // while the native input fakes out the browser by relocating itself\n    // before it receives the actual focus event\n    // We hide the focused input (with the visible caret) invisible by making it scale(0),\n    const parentEl = inputEl.parentNode;\n    // DOM WRITES\n    const clonedEl = inputEl.cloneNode(false);\n    clonedEl.classList.add('cloned-input');\n    clonedEl.tabIndex = -1;\n    parentEl.appendChild(clonedEl);\n    cloneMap.set(componentEl, clonedEl);\n    const doc = componentEl.ownerDocument;\n    const tx = doc.dir === 'rtl' ? 9999 : -9999;\n    componentEl.style.pointerEvents = 'none';\n    inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n    const clone = cloneMap.get(componentEl);\n    if (clone) {\n        cloneMap.delete(componentEl);\n        clone.remove();\n    }\n    componentEl.style.pointerEvents = '';\n    inputEl.style.transform = '';\n};\n\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n    if (!scrollEl || !inputEl) {\n        return () => { return; };\n    }\n    const scrollHideCaret = (shouldHideCaret) => {\n        if (isFocused(inputEl)) {\n            relocateInput(componentEl, inputEl, shouldHideCaret);\n        }\n    };\n    const onBlur = () => relocateInput(componentEl, inputEl, false);\n    const hideCaret = () => scrollHideCaret(true);\n    const showCaret = () => scrollHideCaret(false);\n    scrollEl.addEventListener('ionScrollStart', hideCaret);\n    scrollEl.addEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('blur', onBlur);\n    return () => {\n        scrollEl.removeEventListener('ionScrollStart', hideCaret);\n        scrollEl.removeEventListener('ionScrollEnd', showCaret);\n        inputEl.addEventListener('ionBlur', onBlur);\n    };\n};\n\nconst SKIP_SELECTOR = 'input, textarea, [no-blur]';\nconst enableInputBlurring = () => {\n    let focused = true;\n    let didScroll = false;\n    const doc = document;\n    const onScroll = () => {\n        didScroll = true;\n    };\n    const onFocusin = () => {\n        focused = true;\n    };\n    const onTouchend = (ev) => {\n        // if app did scroll return early\n        if (didScroll) {\n            didScroll = false;\n            return;\n        }\n        const active = doc.activeElement;\n        if (!active) {\n            return;\n        }\n        // only blur if the active element is a text-input or a textarea\n        if (active.matches(SKIP_SELECTOR)) {\n            return;\n        }\n        // if the selected target is the active element, do not blur\n        const tapped = ev.target;\n        if (tapped === active) {\n            return;\n        }\n        if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n            return;\n        }\n        focused = false;\n        // TODO: find a better way, why 50ms?\n        setTimeout(() => {\n            if (!focused) {\n                active.blur();\n            }\n        }, 50);\n    };\n    doc.addEventListener('ionScrollStart', onScroll);\n    doc.addEventListener('focusin', onFocusin, true);\n    doc.addEventListener('touchend', onTouchend, false);\n    return () => {\n        doc.removeEventListener('ionScrollStart', onScroll, true);\n        doc.removeEventListener('focusin', onFocusin, true);\n        doc.removeEventListener('touchend', onTouchend, false);\n    };\n};\n\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n    const itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n    return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n    // compute input's Y values relative to the body\n    const inputTop = inputRect.top;\n    const inputBottom = inputRect.bottom;\n    // compute visible area\n    const visibleAreaTop = contentRect.top;\n    const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n    // compute safe area\n    const safeAreaTop = visibleAreaTop + 15;\n    const safeAreaBottom = visibleAreaBottom * 0.5;\n    // figure out if each edge of the input is within the safe area\n    const distanceToBottom = safeAreaBottom - inputBottom;\n    const distanceToTop = safeAreaTop - inputTop;\n    // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n    const desiredScrollAmount = Math.round((distanceToBottom < 0)\n        ? -distanceToBottom\n        : (distanceToTop > 0)\n            ? -distanceToTop\n            : 0);\n    // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n    // gets focus, so make sure we don't scroll the input above the visible area\n    const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n    const distance = Math.abs(scrollAmount);\n    const duration = distance / SCROLL_ASSIST_SPEED;\n    const scrollDuration = Math.min(400, Math.max(150, duration));\n    return {\n        scrollAmount,\n        scrollDuration,\n        scrollPadding: keyboardHeight,\n        inputSafeY: -(inputTop - safeAreaTop) + 4\n    };\n};\n\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n    let coord;\n    const touchStart = (ev) => {\n        coord = pointerCoord(ev);\n    };\n    const touchEnd = (ev) => {\n        // input cover touchend/mouseup\n        if (!coord) {\n            return;\n        }\n        // get where the touchend/mouseup ended\n        const endCoord = pointerCoord(ev);\n        // focus this input if the pointer hasn't moved XX pixels\n        // and the input doesn't already have focus\n        if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            // begin the input focus process\n            jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n        }\n    };\n    componentEl.addEventListener('touchstart', touchStart, true);\n    componentEl.addEventListener('touchend', touchEnd, true);\n    return () => {\n        componentEl.removeEventListener('touchstart', touchStart, true);\n        componentEl.removeEventListener('touchend', touchEnd, true);\n    };\n};\nconst jsSetFocus = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n    if (!contentEl && !footerEl) {\n        return;\n    }\n    const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n    if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n        // the text input is in a safe position that doesn't\n        // require it to be scrolled into view, just set focus now\n        inputEl.focus();\n        return;\n    }\n    // temporarily move the focus to the focus holder so the browser\n    // doesn't freak out while it's trying to get the input in place\n    // at this point the native text input still does not have focus\n    relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n    inputEl.focus();\n    /* tslint:disable-next-line */\n    if (typeof window !== 'undefined') {\n        let scrollContentTimeout;\n        const scrollContent = async () => {\n            // clean up listeners and timeouts\n            if (scrollContentTimeout !== undefined) {\n                clearTimeout(scrollContentTimeout);\n            }\n            window.removeEventListener('resize', scrollContent);\n            window.removeEventListener('keyboardWillShow', scrollContent);\n            // scroll the input into place\n            if (contentEl) {\n                await contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration);\n            }\n            // the scroll view is in the correct position now\n            // give the native text input focus\n            relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n            // ensure this is the focused input\n            inputEl.focus();\n        };\n        window.addEventListener('resize', scrollContent);\n        window.addEventListener('keyboardWillShow', scrollContent);\n        // fallback in case resize never fires\n        scrollContentTimeout = setTimeout(scrollContent, 300);\n    }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n    if (startCoord && endCoord) {\n        const deltaX = (startCoord.x - endCoord.x);\n        const deltaY = (startCoord.y - endCoord.y);\n        const distance = deltaX * deltaX + deltaY * deltaY;\n        return distance > (threshold * threshold);\n    }\n    return false;\n};\n\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nconst enableScrollPadding = (keyboardHeight) => {\n    const doc = document;\n    const onFocusin = (ev) => {\n        setScrollPadding(ev.target, keyboardHeight);\n    };\n    const onFocusout = (ev) => {\n        setScrollPadding(ev.target, 0);\n    };\n    doc.addEventListener('focusin', onFocusin);\n    doc.addEventListener('focusout', onFocusout);\n    return () => {\n        doc.removeEventListener('focusin', onFocusin);\n        doc.removeEventListener('focusout', onFocusout);\n    };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n    if (input.tagName !== 'INPUT') {\n        return;\n    }\n    if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n        return;\n    }\n    if (input.parentElement &&\n        input.parentElement.parentElement &&\n        input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n        return;\n    }\n    const el = input.closest('ion-content');\n    if (el === null) {\n        return;\n    }\n    const timer = el[PADDING_TIMER_KEY];\n    if (timer) {\n        clearTimeout(timer);\n    }\n    if (keyboardHeight > 0) {\n        el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n    }\n    else {\n        el[PADDING_TIMER_KEY] = setTimeout(() => {\n            el.style.setProperty('--keyboard-offset', '0px');\n        }, 120);\n    }\n};\n\nconst INPUT_BLURRING = true;\nconst SCROLL_PADDING = true;\nconst startInputShims = (config) => {\n    const doc = document;\n    const keyboardHeight = config.getNumber('keyboardHeight', 290);\n    const scrollAssist = config.getBoolean('scrollAssist', true);\n    const hideCaret = config.getBoolean('hideCaretOnScroll', true);\n    const inputBlurring = config.getBoolean('inputBlurring', true);\n    const scrollPadding = config.getBoolean('scrollPadding', true);\n    const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n    const hideCaretMap = new WeakMap();\n    const scrollAssistMap = new WeakMap();\n    const registerInput = async (componentEl) => {\n        if (componentEl.componentOnReady) {\n            await componentEl.componentOnReady();\n        }\n        const inputRoot = componentEl.shadowRoot || componentEl;\n        const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n        const scrollEl = componentEl.closest('ion-content');\n        const footerEl = (!scrollEl) ? componentEl.closest('ion-footer') : null;\n        if (!inputEl) {\n            return;\n        }\n        if ( !!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n            const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n            hideCaretMap.set(componentEl, rmFn);\n        }\n        if ( (!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n            const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n            scrollAssistMap.set(componentEl, rmFn);\n        }\n    };\n    const unregisterInput = (componentEl) => {\n        if ( hideCaret) {\n            const fn = hideCaretMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            hideCaretMap.delete(componentEl);\n        }\n        if ( scrollAssist) {\n            const fn = scrollAssistMap.get(componentEl);\n            if (fn) {\n                fn();\n            }\n            scrollAssistMap.delete(componentEl);\n        }\n    };\n    if (inputBlurring && INPUT_BLURRING) {\n        enableInputBlurring();\n    }\n    if (scrollPadding && SCROLL_PADDING) {\n        enableScrollPadding(keyboardHeight);\n    }\n    // Input might be already loaded in the DOM before ion-device-hacks did.\n    // At this point we need to look for all of the inputs not registered yet\n    // and register them.\n    for (const input of inputs) {\n        registerInput(input);\n    }\n    doc.addEventListener('ionInputDidLoad', ((ev) => {\n        registerInput(ev.detail);\n    }));\n    doc.addEventListener('ionInputDidUnload', ((ev) => {\n        unregisterInput(ev.detail);\n    }));\n};\n\nexport { startInputShims };\n"],"sourceRoot":"webpack:///","file":"input-shims-29e09454-js-es5.js"}